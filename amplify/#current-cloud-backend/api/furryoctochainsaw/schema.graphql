type Landlord @model {
  id: ID!
  name: String!
  properties: [ID]!
}

type Subtask @model {
  id: ID!
  title: String!
  inprogress: Boolean!
}

type Task @model {
  id: ID!
  name: String!
  color: String!
  subtasks: [String]!
}

type Invitation @model {
  id: ID!
  propertyID: String!
  leaseTerm: Int!
  leaseStart: String!
  rentAmount: Int!
  tenant: String!
  
}
type Tenant @model {
  id: ID!
  name: String!
  invitations: [String]!
  accepted: String
}

type Property @model {
  id: ID!
  address: String!
  number: Int!
  houseNumber: Int!
  streetName: String! 
  city: String!
  province: String!
  country: String!
  issues: Int!
  tasks: [String]!
  tenants: [String]!
  landlord: String!
  invitations: [String]!
}

type User @model {
  id: ID!
  name: String!
  imageUri: String
  status: String
  chatRoomUser: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
}

type ChatRoomUser
@model
@key(name: "byUser", fields: ["userID", "chatRoomID"])
@key(name: "byChatRoom", fields: ["chatRoomID", "userID"]) {
  id: ID!
  userID: ID!
  chatRoomID: ID!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}

type ChatRoom @model{
  id: ID!
  chatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
  #list of messages
  messages: [Message] @connection(keyName : "byChatRoom",fields: ["id"])
  lastMessageID: ID
  lastMessage: Message @connection(fields: ["lastMessageID"])
}

type Message
@model
@key(
  name: "byChatRoom",
  fields: ["chatRoomID", "createdAt"],
  queryField: "messagesByChatRoom") {
  id: ID!
  createdAt: String!
  content: String!
  userID: ID!
  chatRoomID: ID!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}


